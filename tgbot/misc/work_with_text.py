# –í—Å—è —Ä–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º


def reformat_date(date, is_begin):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥"""
    months = {
        '01': '—è–Ω–≤–∞—Ä—è',
        '02': '—Ñ–µ–≤—Ä–∞–ª—è',
        '03': '–º–∞—Ä—Ç–∞',
        '04': '–∞–ø—Ä–µ–ª—è',
        '05': '–º–∞—è',
        '06': '–∏—é–Ω—è',
        '07': '–∏—é–ª—è',
        '08': '–∞–≤–≥—É—Å—Ç–∞',
        '09': '—Å–µ–Ω—Ç—è–±—Ä—è',
        '10': '–æ–∫—Ç—è–±—Ä—è',
        '11': '–Ω–æ—è–±—Ä—è',
        '12': '–¥–µ–∫–∞–±—Ä—è',
    }

    date_end = date.split('-')
    day = date_end[-1]

    if day[0] == '0':
        day = day[1:]

    prefix = '—Å' if is_begin else '–¥–æ'

    return f'{prefix} {day} {months.get(date_end[1])}'


def generate_text(sales: tuple, count_sales):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞"""
    text = ''

    figures = {0: 'üî∏',
               1: 'üîπ'}

    counter = 0
    for sale in sales[:count_sales]:
        figure = figures.get(counter % 2)
        name = sale[1]
        percent = sale[7]
        old_price = sale[5]
        new_price = sale[6]
        date_end = sale[4]

        text += f'{figure} {name}\n{percent}% <b>|</b> <s>{old_price}</s> ‚û° <b>{new_price} —Ä—É–±.</b>\n{date_end}\n\n'
        counter += 1

    return text


def split_into_pages(sales: tuple, step: int) -> list:
    """–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    pages = []
    page_number = 0
    last_element_index = 0
    for i in range(step, len(sales) + step, step):
        page_number += 1
        main_text = generate_text(sales[last_element_index:i], step)

        pages.append(main_text)
        last_element_index = i

    return pages


if __name__ == '__main__':
    # with sqlite3.connect('P_MSC_S801_091122.db') as con:
    #     cur = con.cursor()
    #     sales = tuple(cur.execute("""SELECT * FROM sales"""))

    # split_into_pages(sales, 3)
    pass
