import datetime
import os
import sqlite3

from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove

from tgbot.keyboards.reply import pyaterochka_menu
from tgbot.misc.get_sales import get_all_sales_from_all_pages, best_sales, low_prices
from tgbot.misc.states import Stages


async def pyaterochka(message: Message, state: FSMContext):
    await message.answer('–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä', reply_markup=pyaterochka_menu)
    await Stages.pyaterochka.set()


def register_pyaterochka(dp: Dispatcher):
    dp.register_message_handler(pyaterochka, text='–ü—è—Ç—ë—Ä–æ—á–∫–∞')


async def show_sales(message: Message, state: FSMContext):
    data = await state.get_data()
    store = data.get('city_code')
    if store is None:
        store = '34ID'

    today = datetime.datetime.now().strftime("%d%m%y")
    filename = f'data/{store}_{today}.db'

    creating_db_message = None
    if not os.path.exists(filename):
        creating_db_message = await message.answer(text='–°–æ–∑–¥–∞—ë–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ 30 —Å–µ–∫—É–Ω–¥.')
        get_all_sales_from_all_pages(filename=filename, store=store)

    if creating_db_message:
        await creating_db_message.delete()

    result_text = ''
    if message.text == '–õ—É—á—à–∏–µ —Å–∫–∏–¥–∫–∏':
        result_text += '–°–∞–º—ã–µ –±–æ–ª—å—à–∏–µ —Å–∫–∏–¥–∫–∏ (–ø–µ—Ä–≤—ã–µ 10): \n\n'
        sales = best_sales(filename=filename)
        for sale in sales[:10]:
            result_text += f'üî∏ {sale[1]} |\n {sale[8]}% | <s>{sale[6]}</s> ‚û° <b>{sale[7]} —Ä—É–±.</b>\n\n'
        await message.answer(text=result_text, reply_markup=ReplyKeyboardRemove())
        # –î–æ–±–∞–≤–∏—Ç—å inline –∫–Ω–æ–ø–∫–∏: 1. –í—ã–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ 2. –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É

    elif message.text == '–ù–∏–∑–∫–∏–µ —Ü–µ–Ω—ã':
        result_text += '–°–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã (–ø–µ—Ä–≤—ã–µ 10): \n\n'
        sales = low_prices(filename)
        for sale in sales[:10]:
            result_text += f'üî∏ {sale[1]} |\n {sale[8]}% | <s>{sale[6]}</s> ‚û° <b>{sale[7]} —Ä—É–±.</b>\n\n'
        await message.answer(text=result_text, reply_markup=ReplyKeyboardRemove())

    await state.reset_state(with_data=False)


def register_show_sales(dp: Dispatcher):
    dp.register_message_handler(show_sales, text=['–õ—É—á—à–∏–µ —Å–∫–∏–¥–∫–∏', '–ù–∏–∑–∫–∏–µ —Ü–µ–Ω—ã'], state=Stages.pyaterochka)


def register_all_stores(dp):
    register_pyaterochka(dp)
    register_show_sales(dp)
